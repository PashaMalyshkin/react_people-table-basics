{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","App.tsx","index.tsx"],"names":["HomePage","memo","className","Loader","PersonInfo","person","selectedPerson","name","sex","born","died","motherName","fatherName","mother","father","slug","cn","to","PeopleTable","people","useParams","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","findParent","parentName","find","parent","PeoplePage","useState","setPeople","loadingError","setLoadingError","isLoading","setIsLoading","loadPeople","useCallback","peopleFromServer","formattedPeople","useEffect","length","NotFoundPage","PageNavLink","text","isActive","App","role","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ee6f6d82.chunk.js","sourcesContent":["import { FC, memo } from 'react';\n\nexport const HomePage: FC = memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n  selectedPerson: string;\n}\nexport const PersonInfo: FC<Props> = memo(({ person, selectedPerson }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slug === selectedPerson })}\n    >\n      <td>\n        <Link\n          to={slug}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {mother ? (\n        <td>\n          <Link\n            className=\"has-text-danger\"\n            to={mother.slug}\n          >\n            {motherName}\n          </Link>\n        </td>\n      ) : (\n        <td>{motherName || '-'}</td>\n      )}\n\n      {father ? (\n        <td>\n          <Link to={father.slug}>\n            {fatherName}\n          </Link>\n        </td>\n      ) : (\n        <td>{fatherName || '-'}</td>\n      )}\n    </tr>\n  );\n});\n","import { FC, memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PersonInfo } from '../PersonInfo';\nimport { Person } from '../../types';\n\ninterface Props {\n  people: Person[];\n}\nexport const PeopleTable: FC<Props> = memo(({ people }) => {\n  const { selectedPerson = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            person={person}\n            key={person.slug}\n            selectedPerson={selectedPerson}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import { Person } from './types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  FC, memo, useCallback, useEffect, useState,\n} from 'react';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nconst findParent = (people: Person[], parentName: string | null) => {\n  return people.find(parent => parent.name === parentName);\n};\n\nexport const PeoplePage: FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadingError, setLoadingError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const loadPeople = useCallback(async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      const formattedPeople = peopleFromServer.map(person => {\n        return {\n          ...person,\n          mother: findParent(peopleFromServer, person.motherName),\n          father: findParent(peopleFromServer, person.fatherName),\n        };\n      });\n\n      setPeople(formattedPeople);\n    } catch {\n      setLoadingError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n    setPeople([]);\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {!isLoading && (\n            <>\n              {loadingError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {people.length ? (\n                <PeopleTable\n                  people={people}\n                />\n              ) : (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import { FC, memo } from 'react';\n\nexport const NotFoundPage: FC = memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Props {\n  to: string;\n  text: string;\n}\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      cn(\n        'navbar-item', { 'has-background-grey-lighter': isActive },\n      )\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PageNavLink } from './components/PageNavLink';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink\n              to=\"/\"\n              text=\"Home\"\n            />\n\n            <PageNavLink\n              to=\"people\"\n              text=\"People\"\n            />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n\n            <Route\n              path=\"people\"\n              element={<PeoplePage />}\n            >\n              <Route\n                path=\":selectedPerson\"\n                element={<PeoplePage />}\n              />\n\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n            </Route>\n\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}